<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com</groupId>
    <artifactId>RadioMap</artifactId>
    <packaging>nar</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>RadioMap</name>
    <description>A web app for calculating and displaying radio coverage on a map.</description>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
	<!-- only used during development -->
        <!-- <dependency> 
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency> -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.5.3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        
        <!-- The following dependency is needed to automatically load the native libs from .nar files.
             This makes running NativeApp.java directly from within NetBeans work.
             Fixes issue 1,      https://github.com/jjYBdx4IL/example-maven-project-setups/issues/1

             Update: this is already done by jna.
        -->
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>native-lib-loader</artifactId>
            <version>2.1.3</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.maven-nar</groupId>
                <artifactId>nar-maven-plugin</artifactId>
                <version>3.2.3</version>
                <extensions>true</extensions>
                <configuration>
                    <libraries>
                        <library>
                            <type>jni</type>
                            <narSystemPackage>com.nar</narSystemPackage>
                        </library>
                    </libraries>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/nar/nar-generated/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>cygwin</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.maven-nar</groupId>
                        <artifactId>nar-maven-plugin</artifactId>
                        <configuration>
                            <gnuUseOnWindows>true</gnuUseOnWindows>                    
                    
                            <c>
                                <!-- add your equivalent of C:\cygwin64\bin to your PATH environment variable -->
                                <name>gcc</name>
                                <includes>
                                    <include>**/*.cc</include>
                                </includes>
                                <options>
<!--                                    <option>-D__int64=int64_t</option>-->
                                    <option>-I${JAVA_HOME}/include</option>
                                    <option>-I${JAVA_HOME}/include/win32</option>
                                    <option>${java.os.include}</option>
                                    <option>${stack.protector.option}</option>
                                    <option>${architecture.option}</option>
                                    <option>${subsystem.option}</option>
<!--                                    <option>${debug.option}</option>-->
                                    <option>-shared</option>
<!--                                    -Wall -O3 -s -ffast-math -DCROPPING-->
                                    <option>-Wall</option>
                                    <option>-O3</option>
                                    <option>-s</option>
                                    <option>-ffast-math</option>
                                    <option>-DCROPPING</option>
<!--                                    <option>-fcommon</option>-->
<!--                                    <option>-fexceptions</option>-->
                                    <option>q</option>
                                </options>
                            </c>
                    
                            <linker>
                                <name>gcc</name>
                                <options>
                                    <option>${architecture.option}</option>
                                    <option>${subsystem.option}</option>
                                </options>
                            </linker>
                        </configuration>
                    </plugin>                
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
